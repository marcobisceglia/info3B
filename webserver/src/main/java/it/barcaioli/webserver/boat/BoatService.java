package it.barcaioli.webserver.boat;

import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

@Service //A @Component more specific
public class BoatService {

	private final BoatData boatData;

	public BoatService(BoatData boat){
    	this.boatData = boat;
    }

	public Iterable<Boat> getBoats() {
    	//findAll() it's auto generated by SpringBoot
        return boatData.findAll();
    }
    
	public Boat getBoat(Long id) {
		//findById() it's auto generated by SpringBoot
		Optional<Boat> boat = boatData.findById(id);
				
		if (!boat.isPresent())
			throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Boat doesn't exist");
				
		return boat.get();
    }

	public Boat createBoat(Boat newBoat) {
		//save() it's auto generated by SpringBoot
        return boatData.save(newBoat);
    }
    
	public Boat updateBoat(Long id, Boat boat) {
        Optional<Boat> boatToUpdate = boatData.findById(id);
        
        if(!boatToUpdate.isPresent())
        	throw new ResponseStatusException(HttpStatus.NOT_FOUND, "No boat to update");

        Boat boatFound = boatToUpdate.get();
        
        boatFound.setModel(boat.getModel());
        boatFound.setNumSeats(boat.getNumSeats());
        return boatData.save(boatFound);
    }

	public void deleteBoat(Long id) {
		Optional<Boat> boatToDelete = boatData.findById(id);
		
		if (!boatToDelete.isPresent())
			throw new ResponseStatusException(HttpStatus.NOT_FOUND, "No boat to delete");
		
        //delete() it's auto generated by SpringBoot
        boatData.delete(boatToDelete.get());
    }
}
